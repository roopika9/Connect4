{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Turn = function Turn(_ref) {\n  var turn = _ref.turn,\n    disabled = _ref.disabled,\n    ai = _ref.ai;\n  var renderTurnInfo = function renderTurnInfo() {\n    if (disabled) {\n      if (turn == 0) {\n        return _jsx(Text, {\n          style: styles.turn,\n          children: \"It is a draw!\"\n        });\n      } else {\n        if (ai) {\n          if (turn == 1) {\n            return _jsxs(_Fragment, {\n              children: [_jsxs(Text, {\n                style: styles.turn,\n                children: [\"Player \", turn]\n              }), _jsx(View, {\n                style: [styles.turnDisc, {\n                  marginRight: wp(3)\n                }]\n              }), _jsx(Text, {\n                style: styles.turn,\n                children: \"won!\"\n              })]\n            });\n          } else {\n            return _jsxs(_Fragment, {\n              children: [_jsxs(Text, {\n                style: styles.turn,\n                children: [\"AI \", turn]\n              }), _jsx(View, {\n                style: [styles.turnDisc, {\n                  backgroundColor: wp(3)\n                }]\n              }), _jsx(Text, {\n                style: styles.turn,\n                children: \"won!\"\n              })]\n            });\n          }\n        }\n      }\n    }\n  };\n  return _jsx(_Fragment, {});\n};\nexport default Turn;","map":{"version":3,"names":["React","View","Text","StyleSheet","widthPercentageToDP","wp","heightPercentageToDP","hp","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Turn","_ref","turn","disabled","ai","renderTurnInfo","style","styles","children","turnDisc","marginRight","backgroundColor"],"sources":["/usercode/connect4/components/Turn.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nconst Turn = ({ turn, disabled, ai }) => {\n\n  /*\n    Props\n    turn => Integer representing whose turn it is, i.e., player 1, player 2, or AI\n    disabled => Boolean to enable or disable the connect4 game board. Board is disabled once the game is over\n    ai => Boolean representing whether the AI is playing or not. If false, it means player 2 is playing\n  */\n\n  // Write Task 4 code below this line\n  const renderTurnInfo = () => {\n    if(disabled) {\n      if(turn == 0) {\n        return <Text style={styles.turn}>It is a draw!</Text>;\n      }\n      else {\n        if(ai) {\n          if(turn == 1){\n            return(\n              <>\n                <Text style={styles.turn}>Player {turn}</Text>\n                <View style={[styles.turnDisc, {marginRight:wp(3)}]}></View>\n                <Text style={styles.turn}>won!</Text>\n              </>\n            );\n          }\n          else{\n            return(\n              <>\n                <Text style={styles.turn}>AI {turn}</Text>\n                <View style={[styles.turnDisc, {backgroundColor:wp(3)}]}></View>\n                <Text style={styles.turn}>won!</Text>\n              </>\n            )\n          }\n        }\n      }\n    }\n  }\n  return (\n    <></>\n  );\n};\n\nexport default Turn;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,mBAAmB,IAAIC,EAAE,EAAEC,oBAAoB,IAAIC,EAAE,QAAQ,gCAAgC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvG,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAAC,IAAA,EAA+B;EAAA,IAAzBC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IAAEC,EAAE,GAAAH,IAAA,CAAFG,EAAE;EAUhC,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3B,IAAGF,QAAQ,EAAE;MACX,IAAGD,IAAI,IAAI,CAAC,EAAE;QACZ,OAAOP,IAAA,CAACP,IAAI;UAACkB,KAAK,EAAEC,MAAM,CAACL,IAAK;UAAAM,QAAA,EAAC;QAAa,CAAM,CAAC;MACvD,CAAC,MACI;QACH,IAAGJ,EAAE,EAAE;UACL,IAAGF,IAAI,IAAI,CAAC,EAAC;YACX,OACEL,KAAA,CAAAE,SAAA;cAAAS,QAAA,GACEX,KAAA,CAACT,IAAI;gBAACkB,KAAK,EAAEC,MAAM,CAACL,IAAK;gBAAAM,QAAA,GAAC,SAAO,EAACN,IAAI;cAAA,CAAO,CAAC,EAC9CP,IAAA,CAACR,IAAI;gBAACmB,KAAK,EAAE,CAACC,MAAM,CAACE,QAAQ,EAAE;kBAACC,WAAW,EAACnB,EAAE,CAAC,CAAC;gBAAC,CAAC;cAAE,CAAO,CAAC,EAC5DI,IAAA,CAACP,IAAI;gBAACkB,KAAK,EAAEC,MAAM,CAACL,IAAK;gBAAAM,QAAA,EAAC;cAAI,CAAM,CAAC;YAAA,CACrC,CAAC;UAEP,CAAC,MACG;YACF,OACEX,KAAA,CAAAE,SAAA;cAAAS,QAAA,GACEX,KAAA,CAACT,IAAI;gBAACkB,KAAK,EAAEC,MAAM,CAACL,IAAK;gBAAAM,QAAA,GAAC,KAAG,EAACN,IAAI;cAAA,CAAO,CAAC,EAC1CP,IAAA,CAACR,IAAI;gBAACmB,KAAK,EAAE,CAACC,MAAM,CAACE,QAAQ,EAAE;kBAACE,eAAe,EAACpB,EAAE,CAAC,CAAC;gBAAC,CAAC;cAAE,CAAO,CAAC,EAChEI,IAAA,CAACP,IAAI;gBAACkB,KAAK,EAAEC,MAAM,CAACL,IAAK;gBAAAM,QAAA,EAAC;cAAI,CAAM,CAAC;YAAA,CACrC,CAAC;UAEP;QACF;MACF;IACF;EACF,CAAC;EACD,OACEb,IAAA,CAAAI,SAAA,IAAI,CAAC;AAET,CAAC;AAED,eAAeC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}